#+TITLE: Harsh Vyapari's Emacs Config
#+AUTHOR: Harsh Vyapari
#+PROPERTY: header-args :tangle install.sh
#+auto_tangle: t

* Script code

** Color Statement Variables
Here are the variables with color values
#+begin_src bash
#!/usr/bin/env bash

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
CYAN=$(tput setaf 6)
RESET=$(tput sgr0)
#+end_src

** have function
This is a common function to check if command exist or not
#+begin_src bash

function have() {
    command -v "$1" &>/dev/null
}
#+end_src

** cmdCheck function
This function check if the previous command executed or not
#+begin_src bash
function cmdCheck() {
    if [ $? -eq 0 ]; then
        printf "%b\n" "${GREEN}Success!${RESET}"
    else
        printf "%b\n" "${RED}Fail!!${RESET}"
    fi
}
#+end_src

#+RESULTS:

** Installing Emacs
Now we are actually downloading emacs and its required packages from pacman (more packages coming soon ...)
#+begin_src bash
printf "%b\n" "${CYAN}Installing Emacs.${RESET}"
if have pacman; then
    sudo pacman -S emacs ttf-jetbrains-mono-nerd libvterm
    cmdCheck
fi
#+end_src

** Removing Previous Emacs folder (if exist)
This section removes old emacs config folder (if exist)
#+begin_src bash
printf "%b\n" "${CYAN}Checking for old emacs directory (if exist).${RESET}"
if [ -e "$HOME/.config/emacs" ]; then
    printf "%b\n" "${YELLOW}Removing Old Emacs Directory.${RESET}"
    rm -rf "$HOME/.config/emacs"
    cmdCheck
elif [ -e "$HOME/.emacs.d" ]; then
    printf "%b\n" "${YELLOW}Removing Old Emacs Directory.${RESET}"
    rm -rf "$HOME/.emacs.d"
    cmdCheck
elif [ -e "$HOME/.doom.d" ]; then
    printf "%b\n" "${YELLOW}Removing Old Doom Emacs Directory.${RESET}"
    rm -rf "$HOME/.doom.d"
    cmdCheck
else
    printf "%b\n" "${GREEN}Old Config Directories are not present in this system.${GREEN}"
fi
#+end_src

** Setting up Doom Emacs Distribution
This section sets up the doom emacs file
#+begin_src bash
# Clonning doom emacs repo
printf "%b\n" "${YELLOW}Setting Up Doom Emacs.${RESET}"
git clone --depth 1 "https://github.com/doomemacs/doomemacs." ~/.config/emacs
cmdCheck

# Starting Installation Process
~/.config/emacs/bin/doom install
~/.config/emacs/bin/doom sync

# Checking if last commands execution returns 0 as exit code
if [ $? -eq 0 ]; then
    printf "%b\n" "${GREEN} Installation process is finished.${RESET}"
fi
#+end_src
